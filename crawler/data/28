
http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/wiki/Data_structure.html
2
Data structure Wikipedia the free encyclopedia a lang ar a lang kk arab a lang mzn a lang ps a lang ur text decoration none cache key enwiki resourceloader filter minify css d a aa f a dc f be e if window mw mw config set wgCanonicalNamespace wgCanonicalSpecialPageName false wgNamespaceNumber wgPageName Data structure wgTitle Data structure wgCurRevisionId wgRevisionId wgArticleId wgIsArticle true wgIsRedirect false wgAction view wgUserName null wgUserGroups wgCategories Data structures wgBreakFrames false wgPageContentLanguage en wgPageContentModel wikitext wgSeparatorTransformTable wgDigitTransformTable wgDefaultDateFormat dmy wgMonthNames January February March April May June July August September October November December wgMonthNamesShort Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec wgRelevantPageName Data structure wgIsProbablyEditable true wgRestrictionEdit wgRestrictionMove wgWikiEditorEnabledModules toolbar true dialogs true hidesig true templateEditor false templates false preview false previewDialog false publish false toc false wgBetaFeaturesFeatures wgVisualEditor isPageWatched false magnifyClipIconURL bits wikimedia org static wmf skins common images magnify clip png pageLanguageCode en pageLanguageDir ltr svgMaxSize wikilove recipient wikilove anon wgGuidedTourHelpGuiderUrl Help Guided tours guider wgFlowTermsOfUseEdit By saving changes you agree to our u Ca class external text href wikimediafoundation org wiki Terms of use u ETerms of Use u C a u E and agree to irrevocably release your text under the u Ca rel nofollow class external text href creativecommons org licenses by sa u ECC BY SA License u C a u E and u Ca class external text href en wikipedia org wiki Wikipedia Text of the GNU Free Documentation License u EGFDL u C a u E wgULSAcceptLanguageList en us en wgULSCurrentAutonym English wgFlaggedRevsParams tags status levels quality pristine wgStableRevisionId null wgCategoryTreePageCategoryOptions mode hideprefix showcount true namespaces false wgNoticeProject wikipedia wgWikibaseItemId Q if window mw mw loader implement user options function mw user options set ccmeonemails cols date default diffonly disablemail editfont default editondblclick editsectiononrightclick enotifminoredits enotifrevealaddr enotifusertalkpages enotifwatchlistpages extendwatchlist fancysig forceeditsummary gender unknown hideminor hidepatrolled imagesize math minordefault newpageshidepatrolled nickname norollbackdiff numberheadings previewonfirst previewontop rcdays rclimit rememberpassword rows showhiddencats false shownumberswatching showtoolbar skin vector stubthreshold thumbsize underline uselivepreview usenewrc watchcreations watchdefault watchdeletion watchlistdays watchlisthideanons watchlisthidebots watchlisthideliu watchlisthideminor watchlisthideown watchlisthidepatrolled watchmoves wllimit useeditwarning prefershttps flaggedrevssimpleui flaggedrevsstable flaggedrevseditdiffs true flaggedrevsviewdiffs false usebetatoolbar usebetatoolbar cgd visualeditor enable visualeditor enable experimental visualeditor enable mwmath visualeditor betatempdisable wikilove enabled echo subscriptions web page review true echo subscriptions email page review false ep showtoplink false ep bulkdelorgs false ep bulkdelcourses true ep showdyk true echo subscriptions web education program true echo subscriptions email education program false echo notify show link true echo show alert true echo email frequency echo email format html echo subscriptions email system true echo subscriptions web system true echo subscriptions email other false echo subscriptions web other true echo subscriptions email edit user talk false echo subscriptions web edit user talk true echo subscriptions email reverted false echo subscriptions web reverted true echo subscriptions email article linked false echo subscriptions web article linked false echo subscriptions email mention false echo subscriptions web mention true echo subscriptions web edit thank true echo subscriptions email edit thank false echo subscriptions web flow discussion true echo subscriptions email flow discussion false gettingstarted task toolbar show intro true uls preferences language en variant gan gan variant iu iu variant kk kk variant ku ku variant shi shi variant sr sr variant tg tg variant uz uz variant zh zh searchNs true searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false gadget teahouse gadget ReferenceTooltips gadget DRN wizard gadget charinsert gadget mySandbox variant en mw loader implement user tokens function mw user tokens set editToken patrolToken false watchToken false cache key enwiki resourceloader filter minify js eace e aee f f if window mw mw loader load mediawiki page startup mediawiki legacy wikibits mediawiki legacy ajax ext centralauth centralautologin ext visualEditor viewPageTarget init ext uls init ext uls interface wikibase client init ext centralNotice bannerController skins vector js body behavior url w static wmf skins vector csshover min htc Data structure From Wikipedia the free encyclopedia Jump to navigation search A hash table In computer science a data structure is a particular way of storing and organizing data in a computer so that it can be used efficiently Different kinds of data structures are suited to different kinds of applications and some are highly specialized to specific tasks For example B trees are particularly well suited for implementation of databases while compiler implementations usually use hash tables to look up identifiers Data structures provide a means to manage large amounts of data efficiently such as large databases and internet indexing services Usually efficient data structures are a key to designing efficient algorithms Some formal design methods and programming languages emphasize data structures rather than algorithms as the key organizing factor in software design Storing and retrieving can be carried out on data stored in both main memory and in secondary memory Contents Overview Basic principles Language support See also References Further reading External links Overview edit An array stores a number of elements in a specific order They are accessed using an integer to specify which element is required although the elements may be of almost any type Typical implementations allocate contiguous memory words for the elements of arrays but this is not always a necessity Arrays may be fixed length or expandable Records also called tuples or structs are among the simplest data structures A record is a value that contains other values typically in fixed number and sequence and typically indexed by names The elements of records are usually called fields or members A hash table also called a dictionary or map is a more flexible variation on a record in which name value pairs can be added and deleted freely A union type specifies which of a number of permitted primitive types may be stored in its instances e g float or long integer Contrast with a record which could be defined to contain a float and an integer whereas in a union there is only one value at a time Enough space is allocated to contain the widest member datatype A tagged union also called a variant variant record discriminated union or disjoint union contains an additional field indicating its current type for enhanced type safety A set is an abstract data structure that can store specific values without any particular order and with no repeated values Values themselves are not retrieved from sets rather one tests a value for membership to obtain a boolean in or not in Graphs and trees are linked abstract data structures composed of nodes Each node contains a value and also one or more pointers to other nodes Graphs can be used to represent networks while trees are generally used for sorting and searching having their nodes arranged in some relative order based on their values An object contains data fields like a record and also contains program code fragments for accessing or modifying those fields Data structures not containing code like those above are called plain old data structures Many others are possible but they tend to be further variations and compounds of the above Basic principles edit Data structures are generally based on the ability of a computer to fetch and store data at any place in its memory specified by an address a bit string that can be itself stored in memory and manipulated by the program Thus the record and array data structures are based on computing the addresses of data items with arithmetic operations while the linked data structures are based on storing addresses of data items within the structure itself Many data structures use both principles sometimes combined in non trivial ways as in XOR linking The implementation of a data structure usually requires writing a set of procedures that create and manipulate instances of that structure The efficiency of a data structure cannot be analyzed separately from those operations This observation motivates the theoretical concept of an abstract data type a data structure that is defined indirectly by the operations that may be performed on it and the mathematical properties of those operations including their space and time cost Language support edit Most assembly languages and some low level languages such as BCPL Basic Combined Programming Language lack support for data structures On the other hand many high level programming languages and some higher level assembly languages such as MASM have special syntax or other built in support for certain data structures such as records and arrays For example the C and Pascal languages support structs and records respectively in addition to vectors one dimensional arrays and multi dimensional arrays Most programming languages feature some sort of library mechanism that allows data structure implementations to be reused by different programs Modern languages usually come with standard libraries that implement the most common data structures Examples are the C Standard Template Library the Java Collections Framework and Microsoft s NET Framework Modern languages also generally support modular programming the separation between the interface of a library module and its implementation Some provide opaque data types that allow clients to hide implementation details Object oriented programming languages such as C Java and Smalltalk may use classes for this purpose Many known data structures have concurrent versions that allow multiple computing threads to access the data structure simultaneously See also edit Book Data structures List of data structures Plain old data structure Concurrent data structure Data model Dynamization Linked data structure Persistent data structure References edit Paul E Black ed entry for data structure in Dictionary of Algorithms and Data Structures U S National Institute of Standards and Technology December Online version Accessed May Entry data structure in the Encyclop dia Britannica Online entry accessed on May Further reading edit Peter Brass Advanced Data Structures Cambridge University Press Donald Knuth The Art of Computer Programming vol Addison Wesley rd edition Dinesh Mehta and Sartaj Sahni Handbook of Data Structures and Applications Chapman and Hall CRC Press Niklaus Wirth Algorithms and Data Structures Prentice Hall Diane Zak Introduction to programming with c copyright Cengage Learning Asia Pte Ltd External links edit Find more about Data structure at Wikipedia s sister projects Definitions and translations from Wiktionary Media from Commons Quotations from Wikiquote Source texts from Wikisource Textbooks from Wikibooks Learning resources from Wikiversity UC Berkeley video course on data structures Descriptions from the Dictionary of Algorithms and Data Structures Data structures course An Examination of Data Structures from NET perspective Schaffer C Data Structures and Algorithm Analysis v t e Data structures Types Collection Container Abstract Associative array Double ended priority queue Double ended queue List Multimap Priority queue Queue Set multiset Disjoint Sets Stack Arrays Bit array Circular buffer Dynamic array Hash table Hashed array tree Sparse array Linked Association list Linked list Skip list Unrolled linked list XOR linked list Trees B tree Binary search tree AA AVL red black self balancing splay Heap binary binomial Fibonacci R tree R R Hilbert Trie Hash tree Graphs Binary decision diagram Directed acyclic word graph List of data structures v t e Data types Uninterpreted Bit Byte Trit Tryte Word Numeric Bignum Complex Decimal Fixed point Floating point Integer signedness Interval Rational Text Character String null terminated Pointer Address physical virtual Reference Composite Algebraic data type generalized Array Associative array Class Dependent Equality Inductive List Object metaobject Option type Product Record Set Union tagged Other Boolean Bottom type Collection Enumerated type Exception Function type Opaque data type Recursive data type Semaphore Stream Top type Type class Unit type Void Related topics Abstract data type Data structure Generic Kind metaclass Parametric polymorphism Primitive data type Protocol interface Subtyping Type constructor Type conversion Type system v t e Data model Main Role History Architecture Modeling Properties Organization Structure Theory Patterns Schemas Conceptual Logical Physical Types Database Data structure diagram DSD Entity relationship ERM and Enhanced notation EERM Geographic Generic Semantic Related models Data flow diagram DFD Information model Object model Object role model ORM Unified Modeling Language models UML See also Database design Business process model Core architecture data model Enterprise model Function model Process model XML schema Data Format Description Language DFDL Retrieved from http en wikipedia org w index php title Data structure amp oldid Categories Data structures Navigation menu Personal tools Create account Log in Namespaces Article Talk Variants Views Read Edit View history Actions Search Navigation Main page Contents Featured content Current events Random article Donate to Wikipedia Wikimedia Shop Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Data item Cite this page Print export Create a book Download as PDF Printable version Languages Asturianu Bosanski Catal Dansk Deutsch Eesti Espa ol Fran ais Hrvatski Bahasa Indonesia slenska Italiano Latvie u Magyar Bahasa Melayu Nederlands Norsk bokm l Polski Portugu s Rom n Shqip Simple English Sloven ina Sloven ina srpski Srpskohrvatski Suomi Svenska T rk e Ti ng Vi t Edit links This page was last modified on March at Text is available under the Creative Commons Attribution ShareAlike License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Mobile view if window mw mw loader state site loading user ready user groups ready if window mw mw loader load ext cite mobile desktop mediawiki action view postEdit mediawiki user mediawiki hidpi mediawiki page ready mediawiki searchSuggest ext gadget teahouse ext gadget ReferenceTooltips ext gadget DRN wizard ext gadget charinsert mw MwEmbedSupport style ext wikimediaShopLink core ext navigationTiming schema UniversalLanguageSelector ext uls eventlogger ext uls interlanguage skins vector collapsibleNav null true 