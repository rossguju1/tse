
http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/wiki/Perl.html
2
Perl Wikipedia the free encyclopedia a lang ar a lang kk arab a lang mzn a lang ps a lang ur text decoration none cache key enwiki resourceloader filter minify css d a aa f a dc f be e if window mw mw config set wgCanonicalNamespace wgCanonicalSpecialPageName false wgNamespaceNumber wgPageName Perl wgTitle Perl wgCurRevisionId wgRevisionId wgArticleId wgIsArticle true wgIsRedirect false wgAction view wgUserName null wgUserGroups wgCategories Pages using citations with accessdate and no URL CS errors dates Pages with citations lacking titles Pages with citations having bare URLs All articles with dead external links Articles with dead external links from April Articles with dead external links from July Good articles All articles with unsourced statements Articles with unsourced statements from July Articles containing potentially dated statements from All articles containing potentially dated statements Articles containing potentially dated statements from January Articles containing potentially dated statements from Articles with unsourced statements from August Perl American inventions Cross platform software Dynamic programming languages Dynamically typed programming languages Free compilers and interpreters Free software programmed in C High level programming languages Object oriented programming languages Procedural programming languages Programming languages created in Scripting languages Software using the Artistic license Text oriented programming languages Unix programming tools wgBreakFrames false wgPageContentLanguage en wgPageContentModel wikitext wgSeparatorTransformTable wgDigitTransformTable wgDefaultDateFormat dmy wgMonthNames January February March April May June July August September October November December wgMonthNamesShort Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec wgRelevantPageName Perl wgIsProbablyEditable true wgRestrictionEdit wgRestrictionMove wgWikiEditorEnabledModules toolbar true dialogs true hidesig true templateEditor false templates false preview false previewDialog false publish false toc false wgBetaFeaturesFeatures wgVisualEditor isPageWatched false magnifyClipIconURL bits wikimedia org static wmf skins common images magnify clip png pageLanguageCode en pageLanguageDir ltr svgMaxSize wikilove recipient wikilove anon wgGuidedTourHelpGuiderUrl Help Guided tours guider wgFlowTermsOfUseEdit By saving changes you agree to our u Ca class external text href wikimediafoundation org wiki Terms of use u ETerms of Use u C a u E and agree to irrevocably release your text under the u Ca rel nofollow class external text href creativecommons org licenses by sa u ECC BY SA License u C a u E and u Ca class external text href en wikipedia org wiki Wikipedia Text of the GNU Free Documentation License u EGFDL u C a u E wgULSAcceptLanguageList en us en wgULSCurrentAutonym English wgFlaggedRevsParams tags status levels quality pristine wgStableRevisionId null wgCategoryTreePageCategoryOptions mode hideprefix showcount true namespaces false wgNoticeProject wikipedia wgWikibaseItemId Q if window mw mw loader implement user options function mw user options set ccmeonemails cols date default diffonly disablemail editfont default editondblclick editsectiononrightclick enotifminoredits enotifrevealaddr enotifusertalkpages enotifwatchlistpages extendwatchlist fancysig forceeditsummary gender unknown hideminor hidepatrolled imagesize math minordefault newpageshidepatrolled nickname norollbackdiff numberheadings previewonfirst previewontop rcdays rclimit rememberpassword rows showhiddencats false shownumberswatching showtoolbar skin vector stubthreshold thumbsize underline uselivepreview usenewrc watchcreations watchdefault watchdeletion watchlistdays watchlisthideanons watchlisthidebots watchlisthideliu watchlisthideminor watchlisthideown watchlisthidepatrolled watchmoves wllimit useeditwarning prefershttps flaggedrevssimpleui flaggedrevsstable flaggedrevseditdiffs true flaggedrevsviewdiffs false usebetatoolbar usebetatoolbar cgd visualeditor enable visualeditor enable experimental visualeditor enable mwmath visualeditor betatempdisable wikilove enabled echo subscriptions web page review true echo subscriptions email page review false ep showtoplink false ep bulkdelorgs false ep bulkdelcourses true ep showdyk true echo subscriptions web education program true echo subscriptions email education program false echo notify show link true echo show alert true echo email frequency echo email format html echo subscriptions email system true echo subscriptions web system true echo subscriptions email other false echo subscriptions web other true echo subscriptions email edit user talk false echo subscriptions web edit user talk true echo subscriptions email reverted false echo subscriptions web reverted true echo subscriptions email article linked false echo subscriptions web article linked false echo subscriptions email mention false echo subscriptions web mention true echo subscriptions web edit thank true echo subscriptions email edit thank false echo subscriptions web flow discussion true echo subscriptions email flow discussion false gettingstarted task toolbar show intro true uls preferences language en variant gan gan variant iu iu variant kk kk variant ku ku variant shi shi variant sr sr variant tg tg variant uz uz variant zh zh searchNs true searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false gadget teahouse gadget ReferenceTooltips gadget DRN wizard gadget charinsert gadget mySandbox variant en mw loader implement user tokens function mw user tokens set editToken patrolToken false watchToken false cache key enwiki resourceloader filter minify js eace e aee f f if window mw mw loader load mediawiki page startup mediawiki legacy wikibits mediawiki legacy ajax ext centralauth centralautologin ext visualEditor viewPageTarget init ext uls init ext uls interface wikibase client init ext centralNotice bannerController skins vector js body behavior url w static wmf skins vector csshover min htc Perl From Wikipedia the free encyclopedia Jump to navigation search This article is about the programming language For other uses see Perl disambiguation Perl Paradigm s multi paradigm functional imperative object oriented class based reflective procedural Event driven generic Designed by Larry Wall Developer Larry Wall Appeared in Stable release January Preview release February Typing discipline Dynamic Influenced by AWK Smalltalk Lisp C C sed Unix shell Pascal Influenced Python PHP Ruby ECMAScript LPC Windows PowerShell JavaScript Falcon Perl Qore Implementation language C OS Cross platform License GNU General Public License or Artistic License Filename extension s pl pm t pod citation needed Website www perl org Perl Programming at Wikibooks Perl is a family of high level general purpose interpreted dynamic programming languages The languages in this family include Perl and Perl Though Perl is not officially an acronym there are various backronyms in use such as Practical Extraction and Reporting Language Perl was originally developed by Larry Wall in as a general purpose Unix scripting language to make report processing easier Since then it has undergone many changes and revisions The latest major stable revision of Perl is released in May Perl which began as a redesign of Perl in eventually evolved into a separate language Both languages continue to be developed independently by different development teams and liberally borrow ideas from one another The Perl languages borrow features from other programming languages including C shell scripting sh AWK and sed They provide powerful text processing facilities without the arbitrary data length limits of many contemporary Unix commandline tools facilitating easy manipulation of text files Perl gained widespread popularity in the late s as a CGI scripting language in part due to its parsing abilities In addition to CGI Perl is used for graphics programming system administration network programming finance bioinformatics and other applications It is nicknamed the Swiss Army chainsaw of scripting languages because of its flexibility and power and possibly also because of its ugliness In it was also referred to as the duct tape that holds the Internet together in reference to both its ubiquitous use as a glue language and its inelegance Contents History Early versions Early Perl present Name Camel symbol Onion symbol Overview Features Design Applications Implementation Availability Windows Database interfaces Comparative performance Optimizing Perl Future of Perl Perl community State of the Onion Perl pastimes Perl on IRC CPAN Acme Example code Criticism See also References Further reading External links History edit Early versions edit Wall began work on Perl in while working as a programmer at Unisys and released version to the comp sources misc newsgroup on December The language expanded rapidly over the next few years Perl released in featured a better regular expression engine Perl released in added support for binary data streams Originally the only documentation for Perl was a single increasingly lengthy man page In Programming Perl known to many Perl programmers as the Camel Book because of its cover was published and became the de facto reference for the language At the same time the Perl version number was bumped to not to mark a major change in the language but to identify the version that was well documented by the book Early Perl edit Perl went through a series of maintenance releases culminating in Perl in At that point Wall abandoned Perl to begin work on Perl Initial design of Perl continued into The perl porters mailing list was established in May to coordinate work on porting Perl to different platforms It remains the primary forum for development maintenance and porting of Perl Perl was released on October It was a nearly complete rewrite of the interpreter and it added many new features to the language including objects references lexical my variables and modules Importantly modules provided a mechanism for extending the language without modifying the interpreter This allowed the core interpreter to stabilize even as it enabled ordinary Perl programmers to add new language features Perl has been in active development since then Perl was released on March Perl was released on February with the new prototypes feature This allowed module authors to make subroutines that behaved like Perl builtins Perl was released June as a security release One of the most important events in Perl history took place outside of the language proper and was a consequence of its module support On October the Comprehensive Perl Archive Network CPAN was established as a repository for Perl modules and Perl itself as of March it carries over modules written by more than authors and is mirrored worldwide at more than locations Perl was released on May and included among other things the UNIVERSAL package giving Perl a base object to which all classes were automatically derived and the ability to require versions of modules Another significant development was the inclusion of the CGI pm module which contributed to Perl s popularity as a CGI scripting language Perl also now supported running under Microsoft Windows and several other operating systems Perl was released on July This release included several enhancements to the regex engine new hooks into the backend through the B modules the qr regex quote operator a large selection of other new core modules and added support for several more operating systems including BeOS present edit Major Version Latest update Old version no longer supported Old version no longer supported Old version no longer supported Old version no longer supported Older version yet still supported Current stable version Future release Legend Old version Older version still supported Current version Latest preview version Future release Perl was released on March Major changes included bit support Unicode string representation large file support i e files over GiB and the our keyword When developing Perl the decision was made to switch the versioning scheme to one more similar to other open source projects after the next version became with plans for development versions to have odd numbers and stable versions to have even numbers In Wall put forth a call for suggestions for a new version of Perl from the community The process resulted in RFC request for comments documents which were to be used in guiding development of Perl In work began on the apocalypses for Perl a series of documents meant to summarize the change requests and present the design of the next generation of Perl They were presented as a digest of the RFCs rather than a formal document At this point Perl existed only as a description of a language Perl was first released on July and had nearly yearly updates since then Perl improved Unicode support added a new I O implementation added a new thread implementation improved numeric accuracy and added several new modules As of this version still remains the most popular version of Perl and is used by Red Hat Suse Solaris HP UX and AIX In work began on the Synopses documents that originally summarized the Apocalypses but which became the specification for the Perl language In February Audrey Tang began work on Pugs a Perl interpreter written in Haskell This was the first concerted effort towards making Perl a reality This effort stalled in On December the th anniversary of Perl Perl was released Perl included notable new features which brought it closer to Perl These included a switch statement called given when regular expressions updates and the smart match operator Around this same time development began in earnest on another implementation of Perl known as Rakudo Perl developed in tandem with the Parrot virtual machine As of November Rakudo Perl has had regular monthly releases and now is the most complete implementation of Perl A major change in the development process of Perl occurred with Perl the development community has switched to a monthly release cycle of development releases with a yearly schedule of stable releases By that plan bugfix point releases will follow the stable releases every three months On April Perl was released Notable core enhancements include new package NAME VERSION syntax the Yada Yada operator intended to mark placeholder code that is not yet implemented implicit strictures full Y compliance regex conversion overloading DTrace support and Unicode On January Perl was released it contains updated modules and some documentation changes Version was released on June The latest version of that branch was released on November On May Perl was released JSON support is built in as of The latest version of that branch was released on March On May Perl was released Notable new features include the ability to specify a given version of Perl that one wishes to emulate allowing users to upgrade their version of Perl but still run old scripts that would normally be incompatible Perl also updates the core to support Unicode On May Perl was released Notable new features include the new dtrace hooks lexical subs more CORE subs overhaul of the hash for security reasons support for Unicode Some observers credit the release of Perl with the start of the Modern Perl movement In particular this phrase describes a style of development which embraces the use of the CPAN takes advantage of recent developments in the language and is rigorous about creating high quality code While the book Modern Perl may be the most visible standard bearer of this idea other groups such as the Enlightened Perl Organization have taken up the cause In late and several projects for alternative implementations for Perl started Perl in Perl by the Rakudo Perl team moe by Stevan Little and friends p by the Perl team under Reini Urban and gperl by goccy Name edit Perl was originally named Pearl Wall wanted to give the language a short name with positive connotations he claims that he considered and rejected every three and four letter word in the dictionary He also considered naming it after his wife Gloria Wall discovered the existing PEARL programming language before Perl s official release and changed the spelling of the name When referring to the language the name is normally capitalized Perl as a proper noun When referring to the interpreter program itself the name is often uncapitalized perl because most Unix like file systems are case sensitive Before the release of the first edition of Programming Perl it was common to refer to the language as perl Randal L Schwartz however capitalized the language s name in the book to make it stand out better when typeset This case distinction was subsequently documented as canonical The name is occasionally expanded as Practical Extraction and Report Language but this is a backronym Other expansions have been suggested as equally canonical including Wall s own humorous Pathologically Eclectic Rubbish Lister Indeed Wall claims that the name was intended to inspire many different expansions Camel symbol edit The Camel symbol used by O Reilly Media Programming Perl published by O Reilly Media features a picture of a dromedary camel on the cover and is commonly called the Camel Book This image of a camel has become an unofficial symbol of Perl as well as a general hacker emblem appearing on T shirts and other clothing items O Reilly owns the image as a trademark but licenses it for non commercial use requiring only an acknowledgement and a link to www perl com Licensing for commercial use is decided on a case by case basis O Reilly also provides Programming Republic of Perl logos for non commercial sites and Powered by Perl buttons for any site that uses Perl Onion symbol edit The onion logo used by The Perl Foundation The Perl Foundation owns an alternative symbol an onion which it licenses to its subsidiaries Perl Mongers PerlMonks Perl org and others The symbol is a visual pun on pearl onion Overview edit Main article Perl language structure According to Wall Perl has two slogans The first is There s more than one way to do it commonly known as TMTOWTDI The second slogan is Easy things should be easy and hard things should be possible Features edit The overall structure of Perl derives broadly from C Perl is procedural in nature with variables expressions assignment statements brace delimited blocks control structures and subroutines Perl also takes features from shell programming All variables are marked with leading sigils which unambiguously identify the data type for example scalar array hash of the variable in context Importantly sigils allow variables to be interpolated directly into strings Perl has many built in functions that provide tools often used in shell programming although many of these tools are implemented by programs external to the shell such as sorting and calling on operating system facilities Perl takes lists from Lisp hashes associative arrays from AWK and regular expressions from sed These simplify and facilitate many parsing text handling and data management tasks Also shared with Lisp are the implicit return of the last value in a block and the fact that all statements have a value and thus are also expressions and can be used in larger expressions themselves Perl added features that support complex data structures first class functions that is closures as values and an object oriented programming model These include references packages class based method dispatch and lexically scoped variables along with compiler directives for example the strict pragma A major additional feature introduced with Perl was the ability to package code as reusable modules Wall later stated that The whole intent of Perl s module system was to encourage the growth of Perl culture rather than the Perl core All versions of Perl do automatic data typing and automatic memory management The interpreter knows the type and storage requirements of every data object in the program it allocates and frees storage for them as necessary using reference counting so it cannot deallocate circular data structures without manual intervention Legal type conversions for example conversions from number to string are done automatically at run time illegal type conversions are fatal errors Design edit The design of Perl can be understood as a response to three broad trends in the computer industry falling hardware costs rising labor costs and improvements in compiler technology Many earlier computer languages such as Fortran and C aimed to make efficient use of expensive computer hardware In contrast Perl was designed so that computer programmers could write programs more quickly and easily Perl has many features that ease the task of the programmer at the expense of greater CPU and memory requirements These include automatic memory management dynamic typing strings lists and hashes regular expressions introspection and an eval function Perl follows the theory of no built in limits an idea similar to the Zero One Infinity rule Wall was trained as a linguist and the design of Perl is very much informed by linguistic principles Examples include Huffman coding common constructions should be short good end weighting the important information should come first and a large collection of language primitives Perl favors language constructs that are concise and natural for humans to write even where they complicate the Perl interpreter Perl s syntax reflects the idea that things that are different should look different For example scalars arrays and hashes have different leading sigils Array indices and hash keys use different kinds of braces Strings and regular expressions have different standard delimiters This approach can be contrasted with languages such as Lisp where the same S expression construct and basic syntax are used for many different purposes Perl does not enforce any particular programming paradigm procedural object oriented functional or others or even require the programmer to choose among them There is a broad practical bent to both the Perl language and the community and culture that surround it The preface to Programming Perl begins Perl is a language for getting your job done One consequence of this is that Perl is not a tidy language It includes many features tolerates exceptions to its rules and employs heuristics to resolve syntactical ambiguities Because of the forgiving nature of the compiler bugs can sometimes be hard to find Perl s function documentation remarks on the variant behavior of built in functions in list and scalar contexts by saying In general they do what you want unless you want consistency No written specification or standard for the Perl language exists for Perl versions through Perl and there are no plans to create one for the current version of Perl There has been only one implementation of the interpreter and the language has evolved along with it That interpreter together with its functional tests stands as a de facto specification of the language Perl however started with a specification and several projects aim to implement some or all of the specification Applications edit Perl has many and varied applications compounded by the availability of many standard and third party modules Perl has chiefly been used to write CGI scripts large projects written in Perl include cPanel Slash Bugzilla RT TWiki and Movable Type high traffic websites that use Perl extensively include bbc co uk Priceline com Craigslist IMDb LiveJournal DuckDuckGo Slashdot and Ticketmaster It is also an optional component of the popular LAMP technology stack for web development in lieu of PHP or Python Perl is often used as a glue language tying together systems and interfaces that were not specifically designed to interoperate and for data munging that is converting or processing large amounts of data for tasks such as creating reports In fact these strengths are intimately linked The combination makes Perl a popular all purpose language for system administrators particularly because short programs often called one liner programs can be entered and run on a single command line Perl code can be made portable across Windows and Unix such code is often used by suppliers of software both COTS and bespoke to simplify packaging and maintenance of software build and deployment scripts Graphical user interfaces GUIs may be developed using Perl For example Perl Tk and WxPerl are commonly used to enable user interaction with Perl scripts Such interaction may be synchronous or asynchronous using callbacks to update the GUI Implementation edit Perl is implemented as a core interpreter written in C together with a large collection of modules written in Perl and C As of update the stable version is MB when packaged in a tar file and gzip compressed The interpreter is lines of C code and compiles to a MB executable on typical machine architectures Alternatively the interpreter can be compiled to a link library and embedded in other programs There are nearly modules in the distribution comprising lines of Perl and an additional lines of C code Much of the C code in the modules consists of character encoding tables The interpreter has an object oriented architecture All of the elements of the Perl language scalars arrays hashes coderefs file handles are represented in the interpreter by C structs Operations on these structs are defined by a large collection of macros typedefs and functions these constitute the Perl C API The Perl API can be bewildering to the uninitiated but its entry points follow a consistent naming scheme which provides guidance to those who use it The life of a Perl interpreter divides broadly into a compile phase and a run phase In Perl the phases are the major stages in the interpreter s life cycle Each interpreter goes through each phase only once and the phases follow in a fixed sequence Most of what happens in Perl s compile phase is compilation and most of what happens in Perl s run phase is execution but there are significant exceptions Perl makes important use of its capability to execute Perl code during the compile phase Perl will also delay compilation into the run phase The terms that indicate the kind of processing that is actually occurring at any moment are compile time and run time Perl is in compile time at most points during the compile phase but compile time may also be entered during the run phase The compile time for code in a string argument passed to the eval built in occurs during the run phase Perl is often in run time during the compile phase and spends most of the run phase in run time Code in BEGIN blocks executes at run time but in the compile phase At compile time the interpreter parses Perl code into a syntax tree At run time it executes the program by walking the tree Text is parsed only once and the syntax tree is subject to optimization before it is executed so that execution is relatively efficient Compile time optimizations on the syntax tree include constant folding and context propagation but peephole optimization is also performed Perl has a Turing complete grammar because parsing can be affected by run time code executed during the compile phase Therefore Perl cannot be parsed by a straight Lex Yacc lexer parser combination Instead the interpreter implements its own lexer which coordinates with a modified GNU bison parser to resolve ambiguities in the language It is often said that Only perl can parse Perl meaning that only the Perl interpreter perl can parse the Perl language Perl but even this is not in general true Because the Perl interpreter can simulate a Turing machine during its compile phase it would need to decide the Halting Problem in order to complete parsing in every case It is a long standing result that the Halting Problem is undecidable and therefore not even perl can always parse Perl Perl makes the unusual choice of giving the user access to its full programming power in its own compile phase The cost in terms of theoretical purity is high but practical inconvenience seems to be rare Other programs that undertake to parse Perl such as source code analyzers and auto indenters have to contend not only with ambiguous syntactic constructs but also with the undecidability of Perl parsing in the general case Adam Kennedy s PPI project focused on parsing Perl code as a document retaining its integrity as a document instead of parsing Perl as executable code which not even Perl itself can always do It was Kennedy who first conjectured that parsing Perl suffers from the Halting Problem which was later proved Perl is distributed with over functional tests for core Perl language and over functional tests for core modules These run as part of the normal build process and extensively exercise the interpreter and its core modules Perl developers rely on the functional tests to ensure that changes to the interpreter do not introduce software bugs additionally Perl users who see that the interpreter passes its functional tests on their system can have a high degree of confidence that it is working properly Availability edit Perl is dual licensed under both the Artistic License and the GNU General Public License Distributions are available for most operating systems It is particularly prevalent on Unix and Unix like systems but it has been ported to most modern and many obsolete platforms With only six reported exceptions Perl can be compiled from source code on all POSIX compliant or otherwise Unix compatible platforms Because of unusual changes required for the Mac OS Classic environment a special port called MacPerl was shipped independently The Comprehensive Perl Archive Network carries a complete list of supported platforms with links to the distributions available on each CPAN is also the source for publicly available Perl modules that are not part of the core Perl distribution Windows edit Users of Microsoft Windows typically install one of the native binary distributions of Perl for Win most commonly Strawberry Perl or ActivePerl Compiling Perl from source code under Windows is possible but most installations lack the requisite C compiler and build tools This also makes it difficult to install modules from the CPAN particularly those that are partially written in C ActivePerl is a closed source distribution from ActiveState that has regular releases that track the core Perl releases The distribution also includes the Perl package manager PPM a popular tool for installing removing upgrading and managing the use of common Perl modules Strawberry Perl is an open source distribution for Windows It has had regular quarterly releases since January including new modules as feedback and requests come in Strawberry Perl aims to be able to install modules like standard Perl distributions on other platforms including compiling XS modules The Cygwin emulation layer is another way of running Perl under Windows Cygwin provides a Unix like environment on Windows and both Perl and CPAN are available as standard pre compiled packages in the Cygwin setup program Since Cygwin also includes gcc compiling Perl from source is also possible Database interfaces edit Perl s text handling capabilities can be used for generating SQL queries arrays hashes and automatic memory management make it easy to collect and process the returned data For example in Tim Bunce s Perl DBI application programming interface API the arguments to the API can be the text of SQL queries thus it is possible to program in multiple languages at the same time e g for generating a web page using HTML JavaScript and SQL in a here document The use of Perl variable interpolation to programmatically customize each of the SQL queries and the specification of Perl arrays or hashes as the structures to programmatically hold the resulting data sets from each SQL query allows a high level mechanism for handling large amounts of data for post processing by a Perl subprogram In early versions of Perl database interfaces were created by relinking the interpreter with a client side database library This was sufficiently difficult that it was done for only a few of the most important and most widely used databases and it restricted the resulting perl executable to using just one database interface at a time In Perl database interfaces are implemented by Perl DBI modules The DBI Database Interface module presents a single database independent interface to Perl applications while the DBD Database Driver modules handle the details of accessing some different databases there are DBD drivers for most ANSI SQL databases DBI provides caching for database handles and queries which can greatly improve performance in long lived execution environments such as mod perl helping high volume systems avert load spikes as in the Slashdot effect In modern Perl applications especially those written using Web application frameworks such as Catalyst the DBI module is often used indirectly via object relational mappers such as DBIx Class Class DBI or Rose DB Object which generate SQL queries and handle data transparently to the application author Comparative performance edit The Computer Language Benchmarks Game a project hosted by Alioth compares the performance of implementations of typical programming problems in several programming languages The submitted Perl implementations typically perform toward the high end of the memory usage spectrum and give varied speed results Perl s performance in the benchmarks game is typical for interpreted languages Large Perl programs start more slowly than similar programs in compiled languages because perl has to compile the source every time it runs In a talk at the YAPC Europe conference and subsequent article A Timely Start Jean Louis Leroy found that his Perl programs took much longer to run than expected because the perl interpreter spent significant time finding modules within his over large include path Unlike Java Python and Ruby Perl has only experimental support for pre compiling Therefore Perl programs pay this overhead penalty on every execution The run phase of typical programs is long enough that amortized startup time is not substantial but benchmarks that measure very short execution times are likely to be skewed due to this overhead A number of tools have been introduced to improve this situation The first such tool was Apache s mod perl which sought to address one of the most common reasons that small Perl programs were invoked rapidly CGI Web development ActivePerl via Microsoft ISAPI provides similar performance improvements Once Perl code is compiled there is additional overhead during the execution phase that typically isn t present for programs written in compiled languages such as C or C Examples of such overhead include bytecode interpretation reference counting memory management and dynamic type checking Optimizing edit Because Perl is an interpreted language it can give problems when efficiency is critical in such situations the most critical routines can be written in other languages such as C which can be connected to Perl via simple Inline modules or the more complex but flexible XS mechanism Perl edit Main article Perl Camelia the logo for the Perl project At the Perl Conference Jon Orwant made a case for a major new language initiative This led to a decision to begin work on a redesign of the language to be called Perl Proposals for new language features were solicited from the Perl community at large which submitted more than RFCs Wall spent the next few years digesting the RFCs and synthesizing them into a coherent framework for Perl He has presented his design for Perl in a series of documents called apocalypses numbered to correspond to chapters in Programming Perl As of January update the developing specification of Perl is encapsulated in design documents called Synopses numbered to correspond to Apocalypses Perl is not intended to be backward compatible although there will be a compatibility mode Perl and Perl are distinct languages with a common ancestry Thesis work by Bradley M Kuhn overseen by Wall considered the possible use of the Java virtual machine as a runtime for Perl Kuhn s thesis showed this approach to be problematic In it was decided that Perl would run on a cross language virtual machine called Parrot This will mean that other languages targeting the Parrot will gain native access to CPAN allowing some level of cross language development In Audrey Tang created the pugs project an implementation of Perl in Haskell This acted as and continues to act as a test platform for the Perl language separate from the development of the actual implementation allowing the language designers to explore The pugs project spawned an active Perl Haskell cross language community centered around the freenode perl IRC channel As of update a number of features in the Perl language show similarities to Haskell citation needed As of update Perl development centers primarily around two compilers Rakudo Perl an implementation running on the Parrot virtual machine and the Java virtual machine Developers are also working on MoarVM a C language based virtual machine designed specifically for Rakudo Niecza which targets the Common Language Runtime Future of Perl edit Development of Perl is also continuing Perl was released in April with some new features influenced by the design of Perl followed by Perl released on June Perl released on August and Perl released on May Perl development versions are released on a monthly basis with major releases coming out once per year Future plans for Perl include making the core language easier to extend from modules and providing a small extensible Meta object protocol in core The relative proportion of searches for Perl programming as compared with similar searches for other programming languages steadily declined from about in to about in and has remained around the level since Perl community edit Perl s culture and community has developed alongside the language itself Usenet was the first public venue in which Perl was introduced but over the course of its evolution Perl s community was shaped by the growth of broadening Internet based services including the introduction of the World Wide Web The community that surrounds Perl was in fact the topic of Wall s first State of the Onion talk State of the Onion edit State of the Onion is the name for Wall s yearly keynote style summaries on the progress of Perl and its community They are characterized by his hallmark humor employing references to Perl s culture the wider hacker culture Wall s linguistic background sometimes his family life and occasionally even his Christian background Each talk is first given at various Perl conferences and is eventually also published online Perl pastimes edit JAPHs In email Usenet and message board postings Just another Perl hacker JAPH programs are a common trend originated by Randal L Schwartz one of the earliest professional Perl trainers In the parlance of Perl culture Perl programmers are known as Perl hackers and from this derives the practice of writing short programs to print out the phrase Just another Perl hacker In the spirit of the original concept these programs are moderately obfuscated and short enough to fit into the signature of an email or Usenet message The canonical JAPH as developed by Schwartz includes the comma at the end although this is often omitted Perl golf Perl golf is the pastime of reducing the number of characters key strokes used in a Perl program to the bare minimum much in the same way that golf players seek to take as few shots as possible in a round The phrase s first use emphasized the difference between pedestrian code meant to teach a newcomer and terse hacks likely to amuse experienced Perl programmers an example of the latter being JAPHs that were already used in signatures in Usenet postings and elsewhere Similar stunts had been an unnamed pastime in the language APL in previous decades The use of Perl to write a program that performed RSA encryption prompted a widespread and practical interest in this pastime In subsequent years the term code golf has been applied to the pastime in other languages A Perl Golf Apocalypse was held at Perl Conference in Monterey California in July Obfuscation As with C obfuscated code competitions were a well known pastime in the late s The Obfuscated Perl Contest was a competition held by The Perl Journal from to that made an arch virtue of Perl s syntactic flexibility Awards were given for categories such as most powerful programs that made efficient use of space and best four line signature for programs that fit into four lines of characters in the style of a Usenet signature block Poetry Perl poetry is the practice of writing poems that can be compiled as legal Perl code for example the piece known as Black Perl This hobby is made possible by the large number of English words that are used in the Perl language New poems are regularly submitted to the community at PerlMonks Perl on IRC edit There are a number of IRC channels that offer support for the language and some modules IRC Network Channels irc freenode net perl perl cbstream perlcafe poe irc perl org moose poe catalyst dbix class perl help distzilla epo corehackers sdl win toolchain padre irc slashnet org perlmonks irc oftc net perl irc efnet net perlhelp irc rizon net perl irc debian org debian perl CPAN Acme edit There are also many examples of code written purely for entertainment on the CPAN Lingua Romana Perligata for example allows writing programs in Latin Upon execution of such a program the module translates its source code into regular Perl and runs it The Perl community has set aside the Acme namespace for modules that are fun in nature but its scope has widened to include exploratory or experimental code or any other module that is not meant to ever be used in production Some of the Acme modules are deliberately implemented in amusing ways This includes Acme Bleach one of the first modules in the Acme namespace which allows the program s source code to be whitened i e all characters replaced with whitespace and yet still work Example code edit In older versions of Perl one would write the Hello World program as print Hello World n In later versions which support the say statement one can also write it as use say Hello World Good Perl practices require more complex programs to add the use strict and use warnings pragmas leading into something like use strict use warnings print Hello World n Here is a more complex Perl program that counts down the seconds up to a given threshold usr bin perl use strict use warnings use IO Handle my remaining total remaining total shift ARGV STDOUT gt autoflush while remaining printf Remaining s s r remaining total sleep print n The perl interpreter can also be used for one off scripts on the command line The following example as invoked from an sh compatible shell such as Bash translates the string Bob in all files ending with txt in the current directory to Robert perl i bak lp e s Bob Robert g txt Criticism edit Perl has been referred to as line noise by some programmers who claim its syntax makes it a write only language The earliest such mention was in the first edition of the book Learning Perl a Perl tutorial book written by Randal L Schwartz in the first chapter of which he states Yes sometimes Perl looks like line noise to the uninitiated but to the seasoned Perl programmer it looks like checksummed line noise with a mission in life He also stated that the accusation that Perl is a write only language could be avoided by coding with proper care The Perl overview document perlintro states that the names of built in magic scalar variables look like punctuation or line noise The perlstyle document states that line noise in regular expressions could be mitigated using the x modifier to add whitespace According to the Perl FAQ Perl was designed to mitigate the usual suspects that elicit the line noise claim from Perl critics including the removal of the majority of the punctuation variables and the sanitization of the regex syntax The Perl FAQ also states that what is sometimes referred to as Perl s line noise is the actual syntax of the language just as gerunds and prepositions are a part of the English language In a December blog posting chromatic stated that the design of Perl has a well defined grammar that mitigates the issue of line noise via an improved type system a unified object system with an intelligent metamodel metaoperators and a clearer system of context which provides for such niceties as pervasive laziness He also stated that Perl has a coherence and a consistency that Perl lacks See also edit Free software portal Computer programming portal Outline of Perl Perl Data Language Perl Object Environment Plain Old Documentation References edit perl is now available perl org Retrieved Perl is now available perl org Retrieved Perl Licensing dev perl org Retrieved About Perl perl org Retrieved Perl is a family of languages Perl is part of the family but it is a separate language which has its own development team Its existence has no significant impact on the continuing development of Perl Lapworth Leo General Questions About Perl Perl FAQ Perl org Retrieved February perl Practical Extraction Report Language Linux man page Linux die net Retrieved Sheppard Doug Beginner s Introduction to Perl dev perl org Retrieved Ashton Elaine The Timeline of Perl and its Culture v a b c d Wall Larry Tom Christiansen and Jon Orwant July Programming Perl Third Edition O Reilly Media ISBN Smith Roderick W Jun Advanced Linux Networking Addison Wesley Professional p ISBN accessdate requires url help Sheppard Doug Beginner s Introduction to Perl O Reilly Media Retrieved Raymond Eric Swiss Army chainsaw The Jargon File Retrieved Check date values in accessdate help Leonard Andrew The joy of Perl Salon com Retrieved Larry Wall v i Perl a replacement for awk and sed Part comp sources unix Web link Retrieved perl perl porters archive perl org Retrieved perlhist the Perl history records Perl version documentation perldoc perl org Retrieved CPAN CPAN Retrieved a b perl delta what s new for perl Perl version documentation perldoc perl org Retrieved Patwardhan Nathan Siever Ellen Spainhour Stephen Perl in a Nutshell Second Edition O Reilly Media ISBN accessdate requires url help perl delta what s new for perl Perl version documentation perldoc perl org Retrieved a b c d e f g http www cpan org src Missing or empty title help perl delta what s new for perl v Perl version documentation perldoc perl org Retrieved perl delta what s new for perl v x Perl version documentation perldoc perl org Retrieved Wall Larry Apocalypse The Ugly the Bad and the Good Retrieved perl delta what is new for perl v Perl version documentation perldoc perl org Retrieved A Plan for Pugs O Reilly Media Retrieved Tang Audrey Re How to Implement Perl in Ten Years PerlMonks Retrieved perl delta what is new for perl Perl version documentation perldoc perl org Retrieved perlsyn Perl syntax Perl version documentation perldoc perl org Retrieved a b perl delta what is new for perl v Perl version documentation perldoc perl org Retrieved perldelta what is new for perl v Perl version documentation perldoc perl org Retrieved a b perldelta what is new for perl v Perl version documentation metacpan org Retrieved perl delta what is new for perl v metacpan org Perl programming language Perl version documentation metacpan org Retrieved Milestones in the Perl Renaissance Modern Perl Programming Modernperlbooks com Retrieved on Preface Modern Perl Modernperlbooks com Retrieved on Modern Perl edition by chromatic Onyx Neon Press Onyxneon com Retrieved on http www enlightenedperl org http www yapcna org yn talk http blogs perl org users stevan little what is moe a clarification html http perl org p http github com goccy gperl Richardson Marjorie Larry Wall the Guru of Perl Linux Journal Retrieved perlfaq What s the difference between perl and Perl perldoc perl org Perl version documentation Schwartz Randal foy brian Phoenix Tom Jun Learning Perl O Reilly Media Inc p ISBN Perl is sometimes called the Practical Extraction and Report Language although it has also been called a Pathologically Eclectic Rubbish Lister among other expansions It s actually a backronym not an acronym since Larry Wall Perl s creator came up with the name first and the expansion later That s why Perl isn t in all caps There s no point in arguing which expansion is correct Larry endorses both accessdate requires url help Wall Larry perl The Perl language interpreter Perl version documentation Retrieved Wall Larry Re PERL as shibboleth and the Perl community PerlMonks Retrieved a b Schwartz Randal L Phoenix Tom foy brian Learning Perl Third Edition ISBN accessdate requires url help a b The Perl Camel Usage and Trademark Information O Reilly Media Retrieved Perl Trademark The Perl Foundation Retrieved Gillmore Dan Republic Of Perl Chicago Tribune Retrieved May Wall Larry Wherefore Art Thou Linux Journal Retrieved perlfunc Perl builtin functions Perl version documentation perldoc perl org Retrieved Perl Specification The Perl Project Retrieved Perl Compilers The Perl Project Retrieved Gilmore W J Beginning PHP and MySQL From Novice to Professional Fourth Edition Apress p ISBN accessdate requires url help IMDb Helpdesk What software hardware are you using to run the site Internet Movie Database Retrieved DuckDuckGo handles a large amount of search queries at million queries per day https duckduckgo com traffic html DuckDuckGo uses Perl https news ycombinator com item id Perl Books Book Data Munging with Perl Perl org Retrieved December Perl Source Code CPAN Retrieved A description of the Perl interpreter can be found in Programming Perl rd Ed chapter See particularly page which carefully distinguishes run phase and compile phase from run time and compile time Perl time and phase are often confused Schwartz Randal On Parsing Perl Retrieved The Perl Journal O Reilly Media Retrieved Kennedy Adam PPI Parse Analyze and Manipulate Perl without perl CPAN Rice s Theorem The Perl Review Summer and Perl is Undecidable The Perl Review Fall available online at Kegler Jeffrey Perl and Undecidability Hietaniemi Jarkko Perl Ports Binary Distributions CPAN org The MacPerl Pages Prime Time Freeware Perl Ports Binary Distributions CPAN Retrieved ActivePerl is Perl for Windows Mac Linux AIX HP UX amp Solaris ActiveState Software Retrieved Using PPM ActiveState Software Retrieved Descartes Alligator Bunce Tim Programming the Perl DBI database programming with Perl ed Beijing u a O Reilly ISBN Bekman Stas Efficient Work with Databases under mod perl Retrieved Alioth The Computer Language Benchmarks Game Project Info Alioth Retrieved Which programs are fastest Computer Language Benchmarks Game Alioth Retrieved Leroy Jean Louis A Timely Start O Reilly Beattie Malcolm and Enache Adrian B Bytecode Perl compiler s bytecode backend CPAN Ingerson Brian Inline metacpan org CPAN Retrieved dead link Perl The Perl Project Retrieved Torkington Nathan Transcription of Larry s talk nntp perl org Retrieved Official Perl Documentation The Perl Project Retrieved Perl dev perl org dev perl org Retrieved Kuhn Bradley January Considerations on Porting Perl to the Java Virtual Machine University of Cincinnati Retrieved Feature comparison of Perl compilers Worthington Jonathan Rakudo JVM News More tests plus Thread and Promise prototypes guts Retrieved July Worthington Jonathan MoarVM A virtual machine for NQP and Rakudo guts Retrieved July Perl released Update Heise Media UK Archived from the original on April Retrieved perl released Retrieved The unstoppable Perl release train LWN net Retrieved Perl and beyond TIOBE Software Index TIOBE Programming Community Index Perl Retrieved Wall Larry Perl Culture AKA the first State of the Onion dead link Larry Wall nd State of the Onion Retrieved Search for church Randal L Schwartz Who is Just another Perl hacker comp lang perl misc Web link Retrieved Schwartz Randal Canonical JAPH PerlMonks Retrieved Greg Bacon Re Incrementing a value in a slice comp lang perl misc Web link Retrieved Back Adam RSA in lines of perl Retrieved Code Golf What is Code Golf degrees Gallo Felix The Zeroth Obfuscated Perl Contest In Jon Orwant Games diversions and Perl culture best of the Perl journal O Reilly Media Retrieved Perl Poetry PerlMonks Retrieved Conway Damian Lingua Romana Perligata Perl for the XXI imum Century Brocard Leon use Perl Journal of acme use Perl dead link Dr Dobb s Developer Update Miller Freeman a b Schwartz Randal L Learning Perl O Reilly amp Associates perlintro Perl version documentation Perl Porters and perldoc perl org Retrieved perlstyle Perl version documentation Perl Porters and perldoc perl org Retrieved a b Perl FAQ Perl Project Retrieved a b chromatic December The Implementation of Perl versus Perl Retrieved Further reading edit Learning Perl th Edition O Reilly Beginner level introduction to Perl Beginning Perl st Edition Wrox A beginner s tutorial for those new to programming or just new to Perl Modern Perl nd Edition Onyx Neon Describes Modern Perl programming techniques Programming Perl th Edition O Reilly The definitive Perl reference Effective Perl Programming nd Edition Addison Wesley Intermediate to advanced level guide to writing idiomatic Perl Perl Cookbook ISBN Practical Perl programming examples Dominus Mark Jason Higher Order Perl Morgan Kaufmann ISBN Functional programming techniques in Perl External links edit Find more about Perl at Wikipedia s sister projects Definitions and translations from Wiktionary Media from Commons Quotations from Wikiquote Textbooks from Wikibooks Learning resources from Wikiversity Official website Perl org Comprehensive Perl Archive Network The canonical location for Perl code and modules The Perl Foundation PerlMonks A community committed to sharing Perl knowledge and coding tips v t e Perl People Larry Wall Randal L Schwartz Damian Conway Allison Randal Audrey Tang Simon Cozens Sean M Burke chromatic Adam Kennedy brian d foy Mark Jason Dominus Jesse Vincent Things CPAN The Perl Foundation Perl Mongers PerlMonks archives module Perl VM Parrot YAPC Frameworks Bioperl Catalyst Dancer DBI DBIx Class LWP Mason Maypole Mojolicious Moose Plack PSGI Template Toolkit Software Amavis Argus SSP AWStats BackupPC Bricolage Bugzilla Makepp Movable Type Munin OTRS SpamAssassin TWiki Foswiki W Perl Outline Category v t e Free and open source software General Alternative terms for free software Comparison of open source and closed source Comparison of open source software hosting facilities Formerly proprietary software Free and open source Android applications Free and open source software packages Free software Free software events Free software movement Free software project directories Free software web applications Gratis versus libre Long term support Open source software Outline SPDX Operating system families AROS BSD Darwin eCos FreeDOS GNU Haiku Inferno Linux Mach MINIX OpenSolaris Plan ReactOS Development Basic For Qt Eclipse Free Pascal FreeBASIC Gambas GCC Java LLVM Lua NetBeans Open Perl PHP Python ROSE Ruby Tcl History GNU Haiku Linux Mozilla Application Suite Firefox Thunderbird Organizations Android Open Source Project Apache Software Foundation Blender Foundation The Document Foundation Eclipse Foundation Free Software Foundation Europe India Latin America FreeBSD Foundation freedesktop org FSMI GNOME Foundation GNU Project Google Code KDE e V Linux Foundation Mozilla Foundation Open Knowledge Foundation Open Source Geospatial Foundation Open Source Initiative Software Freedom Conservancy SourceForge Symbian Foundation Ubuntu Foundation X Org Foundation Xiph Org Foundation XMPP Standards Foundation Licenses Apache Artistic Beerware Boost BSD CC GNU GPL GNU LGPL ISC MIT MPL Ms PL RL WTFPL zlib License types and standards Comparison of free and open source software licenses Contributor License Agreement Copyfree Copyleft Debian Free Software Guidelines Definition of Free Cultural Works Free license The Free Software Definition The Open Source Definition Open source license Permissive free software licence Public domain Viral license Challenges Binary blob Digital rights management DRM Free and open source graphics device driver Comparison of open source wireless drivers Hardware restrictions License proliferation Mozilla software rebranding Proprietary software SCO Linux controversies Secure boot Software patents Software security Trusted Computing Related topics The Cathedral and the Bazaar Forking Linux distribution Microsoft Open Specification Promise Revolution OS Book Category Commons Portal Retrieved from http en wikipedia org w index php title Perl amp oldid Categories Perl American inventions Cross platform software Dynamic programming languages Dynamically typed programming languages Free compilers and interpreters Free software programmed in C High level programming languages Object oriented programming languages Procedural programming languages Programming languages created in Scripting languages Software using the Artistic license Text oriented programming languages Unix programming tools Hidden categories Pages using citations with accessdate and no URL CS errors dates Pages with citations lacking titles Pages with citations having bare URLs All articles with dead external links Articles with dead external links from April Articles with dead external links from July Good articles All articles with unsourced statements Articles with unsourced statements from July Articles containing potentially dated statements from All articles containing potentially dated statements Articles containing potentially dated statements from January Articles containing potentially dated statements from Articles with unsourced statements from August Navigation menu Personal tools Create account Log in Namespaces Article Talk Variants Views Read Edit View history Actions Search Navigation Main page Contents Featured content Current events Random article Donate to Wikipedia Wikimedia Shop Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Data item Cite this page Print export Create a book Download as PDF Printable version Languages Alemannisch Az rbaycanca B n l m g Bosanski Catal e tina Cymraeg Dansk Deitsch Deutsch Eesti Espa ol Esperanto Euskara Fran ais Gaeilge Galego Hrvatski Bahasa Indonesia Italiano Kurd Latina Latvie u L tzebuergesch Lietuvi Magyar Bahasa Melayu Nederlands Norsk bokm l Norsk nynorsk Polski Portugu s Rom n Shqip Simple English Sloven ina Sloven ina srpski Srpskohrvatski Suomi Svenska T rk e Ti ng Vi t emait ka Edit links This page was last modified on March at Text is available under the Creative Commons Attribution ShareAlike License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Mobile view if window mw mw loader state site loading user ready user groups ready if window mw mw loader load ext cite mobile desktop mediawiki action view postEdit mediawiki user mediawiki hidpi mediawiki page ready mediawiki searchSuggest ext gadget teahouse ext gadget ReferenceTooltips ext gadget DRN wizard ext gadget charinsert mw MwEmbedSupport style ext wikimediaShopLink core ext navigationTiming schema UniversalLanguageSelector ext uls eventlogger ext uls interlanguage skins vector collapsibleNav null true 