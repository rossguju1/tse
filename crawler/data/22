
http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/wiki/Mask_(computing).html
2
Mask computing Wikipedia the free encyclopedia a lang ar a lang kk arab a lang mzn a lang ps a lang ur text decoration none cache key enwiki resourceloader filter minify css d a aa f a dc f be e if window mw mw config set wgCanonicalNamespace wgCanonicalSpecialPageName false wgNamespaceNumber wgPageName Mask computing wgTitle Mask computing wgCurRevisionId wgRevisionId wgArticleId wgIsArticle true wgIsRedirect false wgAction view wgUserName null wgUserGroups wgCategories Articles lacking sources from March All articles lacking sources Binary arithmetic wgBreakFrames false wgPageContentLanguage en wgPageContentModel wikitext wgSeparatorTransformTable wgDigitTransformTable wgDefaultDateFormat dmy wgMonthNames January February March April May June July August September October November December wgMonthNamesShort Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec wgRelevantPageName Mask computing wgIsProbablyEditable true wgRestrictionEdit wgRestrictionMove wgWikiEditorEnabledModules toolbar true dialogs true hidesig true templateEditor false templates false preview false previewDialog false publish false toc false wgBetaFeaturesFeatures wgVisualEditor isPageWatched false magnifyClipIconURL bits wikimedia org static wmf skins common images magnify clip png pageLanguageCode en pageLanguageDir ltr svgMaxSize wikilove recipient wikilove anon wgGuidedTourHelpGuiderUrl Help Guided tours guider wgFlowTermsOfUseEdit By saving changes you agree to our u Ca class external text href wikimediafoundation org wiki Terms of use u ETerms of Use u C a u E and agree to irrevocably release your text under the u Ca rel nofollow class external text href creativecommons org licenses by sa u ECC BY SA License u C a u E and u Ca class external text href en wikipedia org wiki Wikipedia Text of the GNU Free Documentation License u EGFDL u C a u E wgULSAcceptLanguageList en gb wgULSCurrentAutonym English wgFlaggedRevsParams tags status levels quality pristine wgStableRevisionId null wgCategoryTreePageCategoryOptions mode hideprefix showcount true namespaces false wgNoticeProject wikipedia wgWikibaseItemId Q if window mw mw loader implement user options function mw user options set ccmeonemails cols date default diffonly disablemail editfont default editondblclick editsectiononrightclick enotifminoredits enotifrevealaddr enotifusertalkpages enotifwatchlistpages extendwatchlist fancysig forceeditsummary gender unknown hideminor hidepatrolled imagesize math minordefault newpageshidepatrolled nickname norollbackdiff numberheadings previewonfirst previewontop rcdays rclimit rememberpassword rows showhiddencats false shownumberswatching showtoolbar skin vector stubthreshold thumbsize underline uselivepreview usenewrc watchcreations watchdefault watchdeletion watchlistdays watchlisthideanons watchlisthidebots watchlisthideliu watchlisthideminor watchlisthideown watchlisthidepatrolled watchmoves wllimit useeditwarning prefershttps flaggedrevssimpleui flaggedrevsstable flaggedrevseditdiffs true flaggedrevsviewdiffs false usebetatoolbar usebetatoolbar cgd visualeditor enable visualeditor enable experimental visualeditor betatempdisable wikilove enabled echo subscriptions web page review true echo subscriptions email page review false ep showtoplink false ep bulkdelorgs false ep bulkdelcourses true ep showdyk true echo subscriptions web education program true echo subscriptions email education program false echo notify show link true echo show alert true echo email frequency echo email format html echo subscriptions email system true echo subscriptions web system true echo subscriptions email other false echo subscriptions web other true echo subscriptions email edit user talk false echo subscriptions web edit user talk true echo subscriptions email reverted false echo subscriptions web reverted true echo subscriptions email article linked false echo subscriptions web article linked false echo subscriptions email mention false echo subscriptions web mention true echo subscriptions web edit thank true echo subscriptions email edit thank false echo subscriptions web flow discussion true echo subscriptions email flow discussion false gettingstarted task toolbar show intro true uls preferences language en variant gan gan variant iu iu variant kk kk variant ku ku variant shi shi variant sr sr variant tg tg variant uz uz variant zh zh searchNs true searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false gadget teahouse gadget ReferenceTooltips gadget DRN wizard gadget charinsert gadget mySandbox variant en mw loader implement user tokens function mw user tokens set editToken patrolToken false watchToken false cache key enwiki resourceloader filter minify js e d ede d d dc cd if window mw mw loader load mediawiki page startup mediawiki legacy wikibits mediawiki legacy ajax ext centralauth centralautologin skins vector compactPersonalBar defaultTracking ext visualEditor viewPageTarget init ext uls init ext uls interface wikibase client init ext centralNotice bannerController skins vector js body behavior url w static wmf skins vector csshover min htc Mask computing From Wikipedia the free encyclopedia Jump to navigation search Signal masking redirects here For other uses see Masking disambiguation This article does not cite any references or sources Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed March In computer science a mask is data that is used for bitwise operations particularly in a bit field Using a mask multiple bits in a byte nibble word etc can be set either on off or inverted from on to off or vice versa in a single bitwise operation Contents Common bitmask functions Masking bits to Masking bits to Querying the status of a bit Toggling bit values Uses of bitmasks Arguments to functions Inverse Masks Image masks Hash tables See also External links Common bitmask functions edit Masking bits to edit To turn certain bits on the bitwise OR operation can be used following the principle that Y OR and Y OR Y Therefore to make sure a bit is on OR can be used with a To leave a bit unchanged OR is used with a Example turning on the th bit OR Masking bits to edit There is no way to change a bit from on to off using the OR operation Instead bitwise AND is used When a value is AND ed with a the result is simply the original value as in Y AND Y However AND ing a value with is guaranteed to return a so it is possible to turn a bit off by AND ing it with Y AND To leave the other bits alone AND ing them with a can be done Example Turning off the th bit AND Querying the status of a bit edit It is possible to use bitmasks to easily check the state of individual bits regardless of the other bits To do this turning off all the other bits using the bitwise AND is done as discussed above and the value is compared with If it is equal to then the bit was off but if the value is any other value then the bit was on What makes this convenient is that it is not necessary to figure out what the value actually is just that it is not Example Querying the status of the th bit AND Toggling bit values edit So far the article has covered how to turn bits on and turn bits off but not both at once Sometimes it does not really matter what the value is but it must be made the opposite of what it currently is This can be achieved using the XOR exclusive or operation XOR returns if and only if an odd number of bits are Therefore if two corresponding bits are the result will be a but if only one of them is the result will be Therefore inversion of the values of bits is done by XOR ing them with a If the original bit was it returns XOR If the original bit was it returns XOR Also note that XOR masking is bit safe meaning that it will not affect unmasked bits because Y XOR Y just like an OR Example Toggling bit values XOR To write arbitrary s and s to a subset of bits first write s to that subset then set the high bits register register amp bitmask value Uses of bitmasks edit Arguments to functions edit In programming languages such as C bit masks are a useful way to pass a set of named boolean arguments to a function For example in the graphics API OpenGL there is a command glClear which clears the screen or other buffers It can clear up to four buffers the color depth accumulation and stencil buffers so the API authors could have had it take four arguments But then a call to it would look like glClear This is not how glClear actually works and would make for unstable code which is not very descriptive Instead there are four defined field bits GL COLOR BUFFER BIT GL DEPTH BUFFER BIT GL ACCUM BUFFER BIT and GL STENCIL BUFFER BIT and glClear is declared as void glClear GLbitfield bits Then a call to the function looks like this glClear GL COLOR BUFFER BIT GL DEPTH BUFFER BIT Internally a function taking a bitfield like this can use binary and to extract the individual bits For example an implementation of glClear might look like void glClear GLbitfield bits if bits amp GL COLOR BUFFER BIT Clear color buffer if bits amp GL DEPTH BUFFER BIT Clear depth buffer if bits amp GL ACCUM BUFFER BIT Clear accumulation buffer if bits amp GL STENCIL BUFFER BIT Clear stencil buffer The advantage to this approach is that function argument overhead is decreased Since the minimum datum size is one byte separating the options into separate arguments would be wasting seven bits per argument and would occupy more stack space Instead functions typically accept one or more bit integers with up to option bits in each While elegant in the simplest implementation this solution is not type safe A GLbitfield is simply defined to be an unsigned int so the compiler would allow a meaningless call to glClear or even glClear GL POINTS In C an alternative would be to create a class to encapsulate the set of arguments that glClear could accept and could be cleanly encapsulated in a library see the external links for an example Inverse Masks edit Masks are used with IP addresses in IP ACLs Access Control Lists to specify what should be permitted and denied To configure IP addresses on interfaces masks start with and have the large values on the left side for example IP address with a mask Masks for IP ACLs are the reverse for example mask This is sometimes called an inverse mask or a wildcard mask When the value of the mask is broken down into binary s and s the results determine which address bits are to be considered in processing the traffic A indicates that the address bits must be considered exact match a in the mask is a don t care This table further explains the concept Mask Example network address traffic that is to be processed mask network address binary mask binary Based on the binary mask it can be seen that the first three sets octets must match the given binary network address exactly The last set of numbers is made of don t cares Therefore all traffic that begins with matches since the last octet is don t care Therefore with this mask network addresses through x are processed Subtract the normal mask from in order to determine the ACL inverse mask In this example the inverse mask is determined for network address with a normal mask of normal mask inverse mask ACL equivalents The source source wildcard of means any The source wildcard of is the same as host Image masks edit See also Bit blit and Clipping path Raster graphic sprites left and masks right In computer graphics when a given image is intended to be placed over a background the transparent areas can be specified through a binary mask This way for each intended image there are actually two bitmaps the actual image in which the unused areas are given a pixel value with all bits set to s and an additional mask in which the correspondent image areas are given a pixel value of all bits set to s and the surrounding areas a value of all bits set to s In the sample at right black pixels have the all zero bits and white pixels have the all one bits At run time to put the image on the screen over the background the program first masks the screen pixel s bits with the image mask at the desired coordinates using the bitwise AND operation This preserves the background pixels of the transparent areas while resets with zeros the bits of the pixels which will be obscured by the overlapped image Then the program renders the image pixel s bits by combining them with the background pixel s bits using the bitwise OR operation This way the image pixels are appropriately placed while keeping the background surrounding pixels preserved The result is a perfect compound of the image over the background This technique is used for painting pointing device cursors in typical D videogames for characters bullets and so on the sprites for GUI icons and for video titling and other image mixing applications Although related due to being used for the same purposes transparent colors and alpha channels are techniques which do not involve the image pixel mixage by binary masking Hash tables edit To create a hashing function for a hash table often a function is used that has a large domain To create an index from the output of the function a modulo can be taken to reduce the size of the domain to match the size of the array however it is often faster on many processors to restrict the size of the hash table to powers of two sizes and use a bit mask instead See also edit Affinity mask Bit field Bit manipulation Bitwise operation Subnetwork umask External links edit bit enum a type safe C library for bitwise operations Retrieved from http en wikipedia org w index php title Mask computing amp oldid Categories Binary arithmetic Hidden categories Articles lacking sources from March All articles lacking sources Navigation menu Personal tools Create account Log in Namespaces Article Talk Variants Views Read Edit View history Actions Search Navigation Main page Contents Featured content Current events Random article Donate to Wikipedia Wikimedia Shop Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Data item Cite this page Print export Create a book Download as PDF Printable version Languages Deutsch Espa ol Fran ais Latvie u Polski Rom n Svenska Edit links This page was last modified on March at Text is available under the Creative Commons Attribution ShareAlike License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Mobile view if window mw mw loader state site loading user ready user groups ready if window mw mw loader load mobile desktop mediawiki action view postEdit mediawiki user mediawiki hidpi mediawiki page ready mediawiki searchSuggest ext gadget teahouse ext gadget ReferenceTooltips ext gadget DRN wizard ext gadget charinsert mw MwEmbedSupport style ext navigationTiming schema UniversalLanguageSelector ext uls eventlogger ext uls interlanguage skins vector collapsibleNav null true 