
http://old-www.cs.dartmouth.edu/~cs50/data/tse/wikipedia/wiki/Graceful_degradation.html
2
Fault tolerance Wikipedia the free encyclopedia a lang ar a lang kk arab a lang mzn a lang ps a lang ur text decoration none cache key enwiki resourceloader filter minify css d a aa f a dc f be e if window mw mw config set wgCanonicalNamespace wgCanonicalSpecialPageName false wgNamespaceNumber wgPageName Fault tolerance wgTitle Fault tolerance wgCurRevisionId wgRevisionId wgArticleId wgIsArticle true wgIsRedirect false wgAction view wgUserName null wgUserGroups wgCategories Articles needing additional references from January All articles needing additional references Wikipedia articles needing clarification from February Fault tolerance Reliability engineering Computer systems Software Control engineering Systems engineering Software quality RAID wgBreakFrames false wgPageContentLanguage en wgPageContentModel wikitext wgSeparatorTransformTable wgDigitTransformTable wgDefaultDateFormat dmy wgMonthNames January February March April May June July August September October November December wgMonthNamesShort Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec wgRelevantPageName Fault tolerance wgIsProbablyEditable true wgRestrictionEdit wgRestrictionMove wgRedirectedFrom Graceful degradation wgWikiEditorEnabledModules toolbar true dialogs true hidesig true templateEditor false templates false preview false previewDialog false publish false toc false wgBetaFeaturesFeatures wgVisualEditor isPageWatched false magnifyClipIconURL bits wikimedia org static wmf skins common images magnify clip png pageLanguageCode en pageLanguageDir ltr svgMaxSize wikilove recipient wikilove anon wgGuidedTourHelpGuiderUrl Help Guided tours guider wgFlowTermsOfUseEdit By saving changes you agree to our u Ca class external text href wikimediafoundation org wiki Terms of use u ETerms of Use u C a u E and agree to irrevocably release your text under the u Ca rel nofollow class external text href creativecommons org licenses by sa u ECC BY SA License u C a u E and u Ca class external text href en wikipedia org wiki Wikipedia Text of the GNU Free Documentation License u EGFDL u C a u E wgULSAcceptLanguageList en wgULSCurrentAutonym English wgFlaggedRevsParams tags status levels quality pristine wgStableRevisionId null wgCategoryTreePageCategoryOptions mode hideprefix showcount true namespaces false wgNoticeProject wikipedia wgWikibaseItemId Q if window mw mw loader implement user options function mw user options set ccmeonemails cols date default diffonly disablemail editfont default editondblclick editsectiononrightclick enotifminoredits enotifrevealaddr enotifusertalkpages enotifwatchlistpages extendwatchlist fancysig forceeditsummary gender unknown hideminor hidepatrolled imagesize math minordefault newpageshidepatrolled nickname norollbackdiff numberheadings previewonfirst previewontop rcdays rclimit rememberpassword rows showhiddencats false shownumberswatching showtoolbar skin vector stubthreshold thumbsize underline uselivepreview usenewrc watchcreations watchdefault watchdeletion watchlistdays watchlisthideanons watchlisthidebots watchlisthideliu watchlisthideminor watchlisthideown watchlisthidepatrolled watchmoves wllimit useeditwarning prefershttps flaggedrevssimpleui flaggedrevsstable flaggedrevseditdiffs true flaggedrevsviewdiffs false usebetatoolbar usebetatoolbar cgd visualeditor enable visualeditor enable experimental visualeditor betatempdisable wikilove enabled echo subscriptions web page review true echo subscriptions email page review false ep showtoplink false ep bulkdelorgs false ep bulkdelcourses true ep showdyk true echo subscriptions web education program true echo subscriptions email education program false echo notify show link true echo show alert true echo email frequency echo email format html echo subscriptions email system true echo subscriptions web system true echo subscriptions email other false echo subscriptions web other true echo subscriptions email edit user talk false echo subscriptions web edit user talk true echo subscriptions email reverted false echo subscriptions web reverted true echo subscriptions email article linked false echo subscriptions web article linked false echo subscriptions email mention false echo subscriptions web mention true echo subscriptions web edit thank true echo subscriptions email edit thank false echo subscriptions web flow discussion true echo subscriptions email flow discussion false gettingstarted task toolbar show intro true uls preferences language en variant gan gan variant iu iu variant kk kk variant ku ku variant shi shi variant sr sr variant tg tg variant uz uz variant zh zh searchNs true searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false searchNs false gadget teahouse gadget ReferenceTooltips gadget DRN wizard gadget charinsert gadget mySandbox variant en mw loader implement user tokens function mw user tokens set editToken patrolToken false watchToken false cache key enwiki resourceloader filter minify js e d ede d d dc cd if window mw mw loader load mediawiki page startup mediawiki legacy wikibits mediawiki legacy ajax ext centralauth centralautologin skins vector compactPersonalBar defaultTracking ext visualEditor viewPageTarget init ext uls init ext uls interface wikibase client init ext centralNotice bannerController skins vector js body behavior url w static wmf skins vector csshover min htc Fault tolerance From Wikipedia the free encyclopedia Redirected from Graceful degradation Jump to navigation search This article needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed January An example of graceful degradation by design in an image with transparency The top two images are each the result of viewing the composite image in a viewer that recognises transparency The bottom two images are the result in a viewer with no support for transparency Because the transparency mask centre bottom is discarded only the overlay centre top remains the image on the left has been designed to degrade gracefully hence is still meaningful without its transparency information Fault tolerance or graceful degradation is the property that enables a system to continue operating properly in the event of the failure of or one or more faults within some of its components If its operating quality decreases at all the decrease is proportional to the severity of the failure as compared to a na vely designed system in which even a small failure can cause total breakdown Fault tolerance is particularly sought after in high availability or life critical systems A fault tolerant design enables a system to continue its intended operation possibly at a reduced level rather than failing completely when some part of the system fails The term is most commonly used to describe computer systems designed to continue more or less fully operational with perhaps a reduction in throughput or an increase in response time in the event of some partial failure That is the system as a whole is not stopped due to problems either in the hardware or the software An example in another field is a motor vehicle designed so it will continue to be drivable if one of the tires is punctured A structure is able to retain its integrity in the presence of damage due to causes such as fatigue corrosion manufacturing flaws or impact Fault tolerance is not just a property of individual machines it may also characterise the rules by which they interact For example the Transmission Control Protocol TCP is designed to allow reliable two way communication in a packet switched network even in the presence of communications links which are imperfect or overloaded It does this by requiring the endpoints of the communication to expect packet loss duplication reordering and corruption so that these conditions do not damage data integrity and only reduce throughput by a proportional amount Recovery from errors in fault tolerant systems can be characterised as either roll forward or roll back When the system detects that it has made an error roll forward recovery takes the system state at that time and corrects it to be able to move forward Roll back recovery reverts the system state back to some earlier correct version for example using checkpointing and moves forward from there Roll back recovery requires that the operations between the checkpoint and the detected erroneous state can be made idempotent Some systems make use of both roll forward and roll back recovery for different errors or different parts of one error Within the scope of an individual system fault tolerance can be achieved by anticipating exceptional conditions and building the system to cope with them and in general aiming for self stabilization so that the system converges towards an error free state However if the consequences of a system failure are catastrophic or the cost of making it sufficiently reliable is very high a better solution may be to use some form of duplication In any case if the consequence of a system failure is so catastrophic the system must be able to use reversion to fall back to a safe mode This is similar to roll back recovery but can be a human action if humans are present in the loop Contents Components Redundancy Criteria Requirements Replication Disadvantages Examples Related terms See also References Bibliography External links Components edit If each component in turn can continue to function when one of its subcomponents fails this will allow the total system to continue to operate as well Using a passenger vehicle as an example a car can have run flat tires which each contain a solid rubber core allowing them to be used even if a tire is punctured The punctured run flat tire may be used for a limited time at a reduced speed Redundancy edit Main article redundancy engineering Redundancy is the provision of functional capabilities that would be unnecessary in a fault free environment This can be backup components which automatically kick in should one component fail For example large cargo trucks can lose a tire without any major consequences They have many tires and no one tire is critical with the exception of the front tires which are used to steer The idea of incorporating redundancy in order to improve the reliability of a system was pioneered by John von Neumann in the s Two kinds of redundancy are possible space redundancy and time redundancy Space redundancy provides additional components functions or data items that are unnecessary for fault free operation Space redundancy is further classified into hardware software and information redundancy depending on the type of redundant resources added to the system In time redundancy the computation or data transmission is repeated and the result is compared to a stored copy of the previous result Criteria edit Providing fault tolerant design for every component is normally not an option Associated redundancy brings a number of penalties increase in weight size power consumption cost as well as time to design verify and test Therefore a number of choices have to be examined to determine which components should be fault tolerant How critical is the component In a car the radio is not critical so this component has less need for fault tolerance How likely is the component to fail Some components like the drive shaft in a car are not likely to fail so no fault tolerance is needed How expensive is it to make the component fault tolerant Requiring a redundant car engine for example would likely be too expensive both economically and in terms of weight and space to be considered An example of a component that passes all the tests is a car s occupant restraint system While we do not normally think of the primary occupant restraint system it is gravity If the vehicle rolls over or undergoes severe g forces then this primary method of occupant restraint may fail Restraining the occupants during such an accident is absolutely critical to safety so we pass the first test Accidents causing occupant ejection were quite common before seat belts so we pass the second test The cost of a redundant restraint method like seat belts is quite low both economically and in terms or weight and space so we pass the third test Therefore adding seat belts to all vehicles is an excellent idea Other supplemental restraint systems such as airbags are more expensive and so pass that test by a smaller margin Requirements edit The basic characteristics of fault tolerance require No single point of failure If a system experiences a failure it must continue to operate without interruption during the repair process Fault isolation to the failing component When a failure occurs the system must be able to isolate the failure to the offending component This requires the addition of dedicated failure detection mechanisms that exist only for the purpose of fault isolation Recovery from a fault condition requires classifying the fault or failing component The National Institute of Standards and Technology NIST categorizes faults based on Locality Cause Duration and Effect Fault containment to prevent propagation of the failure Some failure mechanisms can cause a system to fail by propagating the failure to the rest of the system An example of this kind of failure is the Rogue transmitter which can swamp legitimate communication in a system and cause overall system failure Mechanisms that isolate a rogue transmitter or failing component to protect the system are required Availability of reversion modes In addition fault tolerant systems are characterized in terms of both planned service outages and unplanned service outages These are usually measured at the application level and not just at a hardware level The figure of merit is called availability and is expressed as a percentage For example a five nines system would statistically provide availability Fault tolerant systems are typically based on the concept of redundancy Replication edit Spare components addresses the first fundamental characteristic of fault tolerance in three ways Replication Providing multiple identical instances of the same system or subsystem directing tasks or requests to all of them in parallel and choosing the correct result on the basis of a quorum Redundancy Providing multiple identical instances of the same system and switching to one of the remaining instances in case of a failure failover Diversity Providing multiple different implementations of the same specification and using them like replicated systems to cope with errors in a specific implementation All implementations of RAID redundant array of independent disks except RAID are examples of a fault tolerant storage device that uses data redundancy A lockstep fault tolerant machine uses replicated elements operating in parallel At any time all the replications of each element should be in the same state The same inputs are provided to each replication and the same outputs are expected The outputs of the replications are compared using a voting circuit A machine with two replications of each element is termed Dual Modular Redundant DMR The voting circuit can then only detect a mismatch and recovery relies on other methods A machine with three replications of each element is termed Triple Modular Redundancy TMR The voting circuit can determine which replication is in error when a two to one vote is observed In this case the voting circuit can output the correct result and discard the erroneous version After this the internal state of the erroneous replication is assumed to be different from that of the other two and the voting circuit can switch to a DMR mode This model can be applied to any larger number of replications Lockstep fault tolerant machines are most easily made fully synchronous with each gate of each replication making the same state transition on the same edge of the clock and the clocks to the replications being exactly in phase However it is possible to build lockstep systems without this requirement Bringing the replications into synchrony requires making their internal stored states the same They can be started from a fixed initial state such as the reset state Alternatively the internal state of one replica can be copied to another replica One variant of DMR is pair and spare Two replicated elements operate in lockstep as a pair with a voting circuit that detects any mismatch between their operations and outputs a signal indicating that there is an error Another pair operates exactly the same way A final circuit selects the output of the pair that does not proclaim that it is in error Pair and spare requires four replicas rather than the three of TMR but has been used commercially Disadvantages edit Fault tolerant design s advantages are obvious while many of its disadvantages are not Interference with fault detection in the same component To continue the above passenger vehicle example it may not be obvious to the driver when a tire has been punctured with either of the fault tolerant systems This is usually handled with a separate automated fault detection system In the case of the tire an air pressure monitor detects the loss of pressure and notifies the driver The alternative is a manual fault detection system such as manually inspecting all tires at each stop Interference with fault detection in another component Another variation of this problem is when fault tolerance in one component prevents fault detection in a different component For example if component B performs some operation based on the output from component A then fault tolerance in B can hide a problem with A If component B is later changed to a less fault tolerant design the system may fail suddenly making it appear that the new component B is the problem Only after the system has been carefully scrutinized will it become clear that the root problem is actually with component A Reduction of priority of fault correction Even if the operator is aware of the fault having a fault tolerant system is likely to reduce the importance of repairing the fault If the faults are not corrected this will eventually lead to system failure when the fault tolerant component fails completely or when all redundant components have also failed Test difficulty For certain critical fault tolerant systems such as a nuclear reactor there is no easy way to verify that the backup components are functional The most infamous example of this is Chernobyl where operators tested the emergency backup cooling by disabling primary and secondary cooling The backup failed resulting in a core meltdown and massive release of radiation Cost Both fault tolerant components and redundant components tend to increase cost This can be a purely economic cost or can include other measures such as weight Manned spaceships for example have so many redundant and fault tolerant components that their weight is increased dramatically over unmanned systems which don t require the same level of safety Inferior components A fault tolerant design may allow for the use of inferior components which would have otherwise made the system inoperable While this practice has the potential to mitigate the cost increase use of multiple inferior components may lower the reliability of the system to a level equal to or even worse than a comparable non fault tolerant system Examples edit Hardware fault tolerance sometimes requires that broken parts can be taken out and replaced with new parts while the system is still operational in computing known as hot swapping Such a system implemented with a single backup is known as single point tolerant and represents the vast majority of fault tolerant systems In such systems the mean time between failures should be long enough for the operators to have time to fix the broken devices mean time to repair before the backup also fails It helps if the time between failures is as long as possible but this is not specifically required in a fault tolerant system Fault tolerance is notably successful in computer applications Tandem Computers built their entire business on such machines which used single point tolerance to create their NonStop systems with uptimes measured in years Fail safe architectures may encompass also the computer software for example by process replication computer science Data formats may also be designed to degrade gracefully HTML for example is designed to be forward compatible allowing new HTML entities to be ignored by Web browsers which do not understand them without causing the document to be unusable Related terms edit There is a difference between fault tolerance and systems that rarely have problems For instance the Western Electric crossbar systems had failure rates of two hours per forty years and therefore were highly fault resistant But when a fault did occur they still stopped operating completely and therefore were not fault tolerant See also edit Byzantine fault tolerance Capillary routing Cluster computing Control reconfiguration Data redundancy Defence in depth Elegant degradation Error detection and correction Error tolerant design Fail soft Fail fast Fail safe Failure transparency clarification needed fall back and forward Fault tolerant computer systems Graceful degradation Intrusion tolerance List of system quality attributes Progressive Enhancement Resilience ecology Resilience network Rhizome Philosophy Rollback Safe life design Separation of protection and security References edit Johnson B W Fault Tolerant Microprocessor Based Systems IEEE Micro vol no pp Laprie J C Dependable Computing and Fault Tolerance Concepts and Terminology Proceedings of th International Symposium on Fault Tolerant Computing FTSC pp von Neumann J Probabilistic Logics and Synthesis of Reliable Organisms from Unreliable Components in Automata Studies eds C Shannon and J McCarthy Princeton University Press pp Avizienis A Fault Tolerant Systems IEEE Transactions on Computers vol no pp Dubrova E Fault Tolerant Design Springer ISBN Bibliography edit Brian Randell P A Lee P C Treleaven June Reliability Issues in Computing System Design ACM Computing Surveys CSUR doi ISSN P J Denning December Fault tolerant operating systems ACM Computing Surveys CSUR doi ISSN Theodore A Linden December Operating System Structures to Support Security and Reliable Software ACM Computing Surveys CSUR doi ISSN External links edit Implementation and evaluation of failsafe computer controlled systems Seminar on Self Healing Systems Interview with Robert Hanmer about his book Patterns for Fault Tolerant Software Part One Part Two Podcast Article Practical Considerations in Making CORBA Services Fault Tolerant by Priya Narasimhan Article about TMR with reference to TMR usage in avionics and industry Article Experiences Strategies and Challenges in Building Fault Tolerant CORBA Systems by Pascal Felber and Priya Narasimhan Dependability And Its Threats A Taxonomy by Algirdas Avizienis Jean Claude Laprie B Randell EU funded research project HPC U addressing development of fault tolerant technologies for Grid computing environments Fault Tolerance and High Availability Systems High Availability Software Graceful Degradation in the RKBExplorer Fault Tolerance and High Availability Systems for Check Point Firewall and VPN networks with Resilience line of FCR appliances v t e Engineering approaches School Empathic design Frugal innovation Kansei engineering Keep It Simple Stupid Minimalism Use centered design User centered design Concepts Ornament and Crime Planned obsolescence Sustainability Theory of constraints Usability v t e Design Portal Outline of design Designer Disciplines Communication design Advertising Book design Corporate design Environmental graphic design Exhibit design Graphic design Illustration Information design Instructional design News design Photography Retail design Signage Traffic sign design Sustainable graphic design Typography Video design Visual merchandising Environmental design Architectural lighting design Ecological design Environmental impact design Garden design Interior architecture Interior design Keyline design Landscape architecture Landscape design Passive solar Sustainable landscape architecture Urban design Fashion design Costume design Jewelry design Industrial design Automotive design Furniture design Packaging and labeling Product design Sensory design Service design Interaction design Experience design Game design Icon design Immersive design Information design Level design Motion graphic design Sonic interaction design User experience design User interface design Web design Other design disciplines Art design Architecture Building design Landscape design Public art design Ceramic glass design Database design Floral design Production design Game art design Organization design Process design Protein design Scenic design Social design Software design Sound design Systems design Textile design Job design Approaches Activity centered design C K theory Co design Contextual design Cradle to cradle design Creative problem solving Creativity techniques Critical design Design bid build Design build Architect led design build Design closure Design for Six Sigma Design for X Design leadership Design management Design methods Design pattern Design research Design science Design strategy Design thinking Ecodesign Empathic design Engineering design process Error tolerant design Fault tolerant design Functional design KISS principle Metadesign Mind mapping Modular design Open design Participatory design Regenerative design Reliability engineering Safe life design Sustainable design Theory of constraints Transformation design Transgenerational design TRIZ Universal design Usage centered design Use centered design User centered design User innovation Awards European Design Award German Design Award Good Design Awards Chicago Good Design Awards Japan IF product design award James Dyson Award Prince Philip Designers Prize Intellectual property Community design Design patent Geschmacksmuster Industrial design rights European Union Organizations AIGA Chartered Society of Designers Design and Industries Association Design Council International Forum Design The Design Society Tools Blueprint Comprehensive layout Computer aided design Flowchart Mockup Product design specification Prototype Sketch Storyboard Technical drawing Website wireframe Related topics Aesthetics Applied arts Concept art Creative industries Cultural icon Design brief Design education Design elements and principles Design engineer Design firm Design life Design museum Design rationale Design review Design specification Design technology Enterprise architecture Futures studies New product development Philosophy of design Process simulation Slow design Visualization Wicked problem See also Commons Wikibooks Wikinews Wikiquote Wikisource Wiktionary Retrieved from http en wikipedia org w index php title Fault tolerance amp oldid Categories Fault tolerance Reliability engineering Computer systems Software Control engineering Systems engineering Software quality RAID Hidden categories Articles needing additional references from January All articles needing additional references Wikipedia articles needing clarification from February Navigation menu Personal tools Create account Log in Namespaces Article Talk Variants Views Read Edit View history Actions Search Navigation Main page Contents Featured content Current events Random article Donate to Wikipedia Wikimedia Shop Interaction Help About Wikipedia Community portal Recent changes Contact page Tools What links here Related changes Upload file Special pages Permanent link Page information Data item Cite this page Print export Create a book Download as PDF Printable version Languages Deutsch Espa ol Edit links This page was last modified on March at Text is available under the Creative Commons Attribution ShareAlike License additional terms may apply By using this site you agree to the Terms of Use and Privacy Policy Wikipedia is a registered trademark of the Wikimedia Foundation Inc a non profit organization Privacy policy About Wikipedia Disclaimers Contact Wikipedia Developers Mobile view if window mw mw loader state site loading user ready user groups ready if window mw mw loader load ext cite mobile desktop mediawiki action view postEdit mediawiki user mediawiki hidpi mediawiki page ready mediawiki searchSuggest ext gadget teahouse ext gadget ReferenceTooltips ext gadget DRN wizard ext gadget charinsert mw MwEmbedSupport style ext navigationTiming schema UniversalLanguageSelector ext uls eventlogger ext uls interlanguage skins vector collapsibleNav null true 